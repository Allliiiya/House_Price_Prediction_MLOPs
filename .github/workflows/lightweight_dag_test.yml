name: Lightweight Test Airflow DAGs

on:
  push:
    branches:
      - main
    paths:
      - "Airflow/dags/**"

jobs:
  validate-dags:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install Airflow and DAG Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install apache-airflow
          if [ -f Airflow/requirements.txt ]; then
            sed -i '/==/d' Airflow/requirements.txt  # Remove version constraints dynamically
            pip install -r Airflow/requirements.txt
          fi

      # Step 4: Validate DAG Syntax
      - name: Validate DAG Syntax
        run: |
          for dag in Airflow/dags/*.py; do
            echo "Validating $dag"
            python "$dag"
          done

      # [NEW] Step 5: Test Airflow DAGs (Mock Execution)
      # Added to test DAG execution with Airflow's test feature
      - name: Test DAG Execution
        run: |
          pip install apache-airflow[testing]
          echo "Testing DAG: DAG_Data_Preprocessing"
          airflow dags test DAG_Data_Preprocessing 2024-01-01
      # ----> Added for lightweight execution testing.

      # Step 6: Lint DAG Files
      - name: Lint DAG Files
        run: |
          pip install flake8
          flake8 Airflow/dags/

      # [NEW] Step 7: Check Airflow DAGs with airflow-dag-linter
      # Added for structural validation of DAGs
      - name: Lint DAG Structure
        run: |
          pip install airflow-dag-linter
          airflow-dag-linter Airflow/dags/
      # ----> Added for ensuring DAG best practices.
          
      # Step 7: Generate and Lock Dependencies
      - name: Lock Dependencies
        run: |
          pip freeze > Airflow/locked-requirements.txt
          echo "Dependencies locked in Airflow/locked-requirements.txt"

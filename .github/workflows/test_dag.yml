---
  name: Test Airflow DAGs with Docker
  
  on:
    push:
      branches:
        - main
      paths:
        - "Airflow/dags/**"
        - "docker-compose.yml"
  
  jobs:
    test-dag:
      runs-on: ubuntu-latest
  
      steps:
        # Step 1: Checkout the repository
        - name: Checkout Repository
          uses: actions/checkout@v3
  
        # Step 2: Set up Docker
        - name: Set up Docker
          run: |
            docker --version || {
              echo "Docker is not installed or not working!";
              exit 1;
            }
            docker-compose --version || {
              echo "Docker Compose is not installed or not working!";
              exit 1;
            }
  
        # Step 3: Build Airflow Docker Containers
        - name: Build Docker Containers
          run: |
            docker-compose -f docker-compose.yml up -d --build || {
              echo "Failed to build and start Airflow containers!";
              exit 1;
            }
  
        # Step 4: Wait for Airflow Webserver to Start
        - name: Wait for Airflow to Start
          run: |
            for i in {1..30}; do
              if curl -s http://localhost:8080/health | grep '"status":"healthy"';
              then
                echo "Airflow is up and running!";
                break;
              fi
              echo "Waiting for Airflow to start...";
              sleep 10;
            done
            if ! curl -s http://localhost:8080/health | grep '"status":"healthy"';
            then
              echo "Airflow did not start within the expected time!";
              exit 1;
            fi
  
        # Step 5: Test DAGs by Triggering a DAG Run
        - name: Test DAG Run
          run: |
            docker exec -t $(docker ps -qf "name=airflow_scheduler")
            airflow dags test DAG_Data_Preprocessing
            $(date -u +"%Y-%m-%dT%H:%M:%S") || {
              echo "DAG test run failed! Please check the logs.";
              exit 1;
            }
  
        # Step 6: Tear Down the Environment
        - name: Tear Down
          if: always()
          run: |
            docker-compose -f docker-compose.yml down || {
              echo "Failed to tear down the Docker environment!";
              exit 1;
            }
  